# 105_algorithm_theory
## 03_DP_백준_11726.py

"""  https://www.acmicpc.net/problem/11726
    백준 11726번
        2×n 크기의 직사각형을 1×2, 2×1 타일로 채우는 방법의 수를 구하는 프로그램을 작성하시오.
        아래 그림은 2×5 크기의 직사각형을 채운 한 가지 방법의 예이다.

    입력
        첫째 줄에 n이 주어진다. (1 ≤ n ≤ 1,000)

    출력
        첫째 줄에 2×n 크기의 직사각형을 채우는 방법의 수를 10,007로 나눈 나머지를 출력한다.

        예제 입력 1
        2
        예제 출력 1
        2

        예제 입력 2
        9
        예제 출력 2
        55

    점화식을 찾아야한다. 피보나치 수열이랑
        2*0 이면.. 0개
        2*1 이면.. 1개
        2*2 이면.. 2개
        2*3 이면.. 3개
        2*4 이면.. 5개
        dp[n+2] = dp[n] + dp[n+1]

    DP형 문제의 특징은
    1. 빈 리스트를 만든다.
    2. 초기값을 설정한다.
    3. 점화식 기반으로 계산 값을 적용한다.
    4. 특정 입력갑셍 따른 계산값을 리스트에서 추출한다.

    코드 자체는 간결하고
    가장 적은 경우의 수부터 계산을 해본 후 패턴을 찾아 식을 세우는 것이 핵심이다.

"""
import random

def Q_11726(num):
    dp = [0 for index in range(1000 + 1)]
    dp[1] = 1
    dp[2] = 2

    for idx in range(3, 1001):
        dp[idx] = dp[idx - 1] + dp[idx - 2]
    return dp[num] % 10007

num = int(input())
print(Q_11726(num))